struct complex {

	float real;
	float imag;

};

complex mul(complex c0, complex c1) {

	complex c;
	c.real = c0.real * c1.real - c0.imag * c1.imag;
	c.imag = c0.real * c1.imag + c0.imag * c1.real;
	return c;

}

vec2 mul(vec2 c0, vec2 c1) {
	return vec2(c0.x * c1.x - c0.y * c1.y,
		c0.x * c1.y + c0.y * c1.x);
}

vec4 mul(vec4 c0, vec4 c1) {
	return vec4(
		c0.x * c1.x - c0.y * c1.y,
		c0.x * c1.y + c0.y * c1.x,
		c0.z * c1.z - c0.w * c1.w,
		c0.z * c1.w + c0.w * c1.z
		);
}

complex add(complex c0, complex c1) {

	complex c;
	c.real = c0.real + c1.real;
	c.imag = c0.imag + c1.imag;
	return c;

}

complex conj(complex c) {

	return complex(c.real, -c.imag);

}